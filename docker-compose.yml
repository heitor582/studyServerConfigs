version: "3.8"

services:
  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: on-failure
    ports:
      - 3000:3000
    networks:
     - server-network
    env_file: 
      - "./grafana/.env"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"] 
      interval: 10s           
      timeout: 5s             
      retries: 3 
    volumes:
      - grafana_data:/var/lib/grafana
  
  registry:
    image: registry
    container_name: registry
    restart: on-failure
    ports:
      - 5000:5000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000"] 
      interval: 10s           
      timeout: 5s             
      retries: 3  
    volumes:
      - registry_data:/var/lib/registry

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    ports:
      - 9000:9000
    volumes:
      - portainer_data:/portainer_data
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped  
  
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - ./rabbitmq/definitions.json:/etc/rabbitmq/definitions.json
      - ./rabbitmq/rabbitmq.config:/etc/rabbitmq/rabbitmq.config
    networks:
     - server-network

networks:
  server-network:
    name: server-network
    driver: bridge

volumes:
  grafana_data:
  registry_data:
  portainer_data:
  rabbitmq_data: