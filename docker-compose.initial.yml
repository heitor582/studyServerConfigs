version: '3.8'

services:
  traefik:
    image: traefik
    container_name: traefik
    restart: always
    ports:
      - "8080:80"   # HTTP
      - "8089:8080"
      - "443:443" # HTTPS
    networks:
      - traefik_network
    depends_on:
      - localstack
      - grafana
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80 "] # Health check command
      interval: 10s           # Health check interval
      timeout: 5s             # Health check timeout
      retries: 3  
    command:
      - "--api.insecure=true"  # Enable insecure API (for demo purposes, secure this in production)
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.server.com`)"
      - "traefik.http.routers.traefik.entrypoints=web"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.middlewares.traefik-auth.basicauth.users=admin:$$apr1$$yourhashedpassword"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock" # Mount Docker socket for Traefik

  localstack:
    image: localstack/localstack
    container_name: localstack
    ports:
      - "4566:4566" # LocalStack API
    environment:
      - SERVICES=s3,lambda,rds,ecr # Include RDS and ECR services
      - DEBUG=1
      - DEFAULT_REGION=us-east-1 # Set your desired AWS region
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4566/health"] # Health check command
      interval: 10s           # Health check interval
      timeout: 5s             # Health check timeout
      retries: 3              # Number of retries before considering the container unhealthy
    networks:
      - traefik_network
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock" # Mount Docker socket for LocalStack
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.localstack.rule=Host(`localstack.server.com`)" # Replace with your domain
      - "traefik.http.services.localstack.loadbalancer.server.port=4566"

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000" # Grafana web UI
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"] # Health check command
      interval: 10s           # Health check interval
      timeout: 5s             # Health check timeout
      retries: 3 
    networks:
      - traefik_network
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=yourpassword # Set Grafana admin password
    volumes:
      - grafana_data:/var/lib/grafana # Grafana data volume
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`grafana.server.com`)" # Replace with your domain
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
      - "traefik.http.routers.grafana.tls=true" # Enable TLS for Grafana

networks:
  traefik_network:
    driver: bridge

volumes:
  grafana_data: